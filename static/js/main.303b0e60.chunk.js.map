{"version":3,"sources":["App.js","components/info.js","components/form.js","components/weather.js","index.js"],"names":["API_KEY","App","state","city","undefined","country","temp","weather","windSpeed","windDeg","windDir","windLabel","humidity","preassure","sunrise","sunset","coords","lat","lon","error","weatherOn","seasonBg","_this","getCurrentSeasonStyle","getWindDirection","deg","Math","floor","getWindLabel","speed","overlay","param","overlayAction","eval","resetWeather","document","getElementById","value","setState","getWeather","_callee","event","userCity","apiUrl","data","sunriseDate","sunsetDate","sunriseHours","sunriseMinutes","sunriseSeconds","sunsetHours","sunsetMinutes","sunsetSeconds","sunriseTime","sunsetTime","D_selincorvin_Development_ReactJS_Mini_Projects_Weather_App_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","preventDefault","target","elements","fetch","concat","sent","json","cod","Date","sys","getHours","getMinutes","getSeconds","substr","name","main","description","wind","pressure","coord","stop","this","setTimeout","style","display","overflowY","month","getMonth","bgImgs","bgSolids","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","_components_weather__WEBPACK_IMPORTED_MODULE_8__","React","Component","Info","react_default","Form","props","onSubmit","type","placeholder","id","color","Weather","background","onClick","viewBox","d","toFixed","info","components_form","lib","animationIn","animationOut","isVisible","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_5__","ReactDOM","render"],"mappings":"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","file":"static/js/main.303b0e60.chunk.js","sourcesContent":["import React from 'react';\nimport Weather from './components/weather';\n\nconst API_KEY = '28bf21d94660c7691896649b9a92a3d1';  //API key for https://openweathermap.org/\n\nexport default class App extends React.Component {\n    state = {\n        city: undefined, country: undefined, temp: undefined, weather: undefined, windSpeed: undefined,\n        windDeg: undefined, windDir: undefined, windLabel: undefined, humidity: undefined,\n        preassure: undefined, sunrise: undefined, sunset: undefined,\n        coords: { lat: undefined, lon: undefined }, error: undefined,\n\n        weatherOn: false,  //for animated weather data\n\n        seasonBg : this.getCurrentSeasonStyle()  //array with season picture and season background style\n    };\n\n    componentDidMount() {  //drop loader when main component will be ready\n        setTimeout(function() {\n            document.getElementById('loader').style.display = 'none';\n            document.getElementById('body').style.overflowY = 'scroll';\n        }, 2000);\n    };\n\n    getCurrentSeasonStyle() {  //get app style using season data\n        let\n            month    = new Date().getMonth(),\n            bgImgs   = ['winter.jpg', 'spring.png', 'summer.jpg', 'autumn.jpg'],\n            bgSolids = [\n                ['light-blue darken-1', '#039be5'], ['green lighten-2', '#81c784'],\n                ['light-green', '#8bc34a'], ['orange darken-3', '#ef6c00']\n            ];\n\n        return month >= 2 && month <= 4 ? [bgImgs[1], bgSolids[1][0], bgSolids[1][1]] :\n            month >= 5 && month <= 7 ? [bgImgs[2], bgSolids[2][0], bgSolids[2][1]]: \n            month >= 8 && month <= 10 ? [bgImgs[3], bgSolids[3][0], bgSolids[3][1]] :\n            [bgImgs[0], bgSolids[0][0], bgSolids[0][1]];\n    };\n\n    getWindDirection = deg => {\n        if (deg) {\n            var\n                decodeDeg   = Math.floor((deg / 22.5) + 0.5),\n                windDirects = [\n                    'North', 'North-Northeast', 'Northeast', 'East-Northeast',\n                    'East', 'East-Southeast', 'Southeast', 'South-Southeast',\n                    'South', 'South-Southwest', 'Southwest', 'West-Southwest',\n                    'West', 'West-Northwest', 'Northwest', 'North-Northwest'\n                ];\n            return windDirects[(decodeDeg % 16)];\n        }\n        return undefined;\n    };\n\n    getWindLabel = speed => {\n        if (speed) {\n            if (speed >= 0    && speed <= 0.2)  return 'Calm';\n            if (speed >= 0.3  && speed <= 1.5)  return 'Light Air';\n            if (speed >= 1.6  && speed <= 3.3)  return 'Light Breeze';\n            if (speed >= 3.4  && speed <= 5.4)  return 'Gentle Breeze';\n            if (speed >= 5.5  && speed <= 7.9)  return 'Moderate Breeze';\n            if (speed >= 8.0  && speed <= 10.7) return 'Fresh Breeze';\n            if (speed >= 10.8 && speed <= 13.8) return 'strong Breeze';\n            if (speed >= 13.9 && speed <= 17.1) return 'Near Gale';\n            if (speed >= 17.2 && speed <= 20.7) return 'Gale';\n            if (speed >= 20.8 && speed <= 24.4) return 'Severe Gale';\n            if (speed >= 24.5 && speed <= 28.4) return 'Strong storm';\n            if (speed >= 28.5 && speed <= 32.6) return 'Violent Storm';\n            if (speed >= 32.7)                  return 'Hurricane';\n        }\n        return undefined;\n    };\n\n    overlay = param => {  //animate the image overlay\n        let overlayAction = param ? 'add' : 'remove';\n        eval('document.getElementById(\"weather_wrap_image\").classList.' + overlayAction + '(\"overlay_active\")');\n        eval('document.getElementById(\"weather_image_items\").classList.' + overlayAction + '(\"items_active\")');\n        eval('document.getElementById(\"weather_wrap_image_reset\").classList.' + overlayAction + '(\"reset_active\")');\n    };\n\n    resetWeather = () => { //clear weather search\n        document.getElementById('form_city_input').value = '';\n        this.overlay(false);\n        this.setState({weatherOn: false});\n    };\n\n    getWeather = async event => {\n        event.preventDefault();  //reset default page reloading after form submiting\n        var userCity = event.target.elements.city.value;\n\n        if (userCity) {\n            var\n                apiUrl = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${userCity}&appid=${API_KEY}&units=metric`),\n                data   = await apiUrl.json();\n\n            if (data.cod === 200) {\n                var\n                    sunriseDate    = new Date(data.sys.sunrise * 1000),\n                    sunsetDate     = new Date(data.sys.sunset * 1000),\n\n                    sunriseHours   = sunriseDate.getHours(),\n                    sunriseMinutes = '0' + sunriseDate.getMinutes(),\n                    sunriseSeconds = '0' + sunriseDate.getSeconds(),\n\n                    sunsetHours    = sunsetDate.getHours(),\n                    sunsetMinutes  = '0' + sunsetDate.getMinutes(),\n                    sunsetSeconds  = '0' + sunsetDate.getSeconds(),\n\n                    sunriseTime    = sunriseHours + ':' + sunriseMinutes.substr(-2) + ':' + sunriseSeconds.substr(-2),\n                    sunsetTime     = sunsetHours + ':' + sunsetMinutes.substr(-2) + ':' + sunsetSeconds.substr(-2);\n\n                this.setState({\n                    city: data.name, country: data.sys.country, temp: data.main.temp, weather: data.weather[0].description,\n                    windSpeed: data.wind.speed, windDeg: data.wind.deg, windDir: this.getWindDirection(data.wind.deg),\n                    windLabel: this.getWindLabel(data.wind.speed), humidity: data.main.humidity, pressure: data.main.pressure,\n                    sunrise: sunriseTime, sunset: sunsetTime, coords: { lat: data.coord.lat, lon: data.coord.lon },\n                    weatherOn: true,\n                    error: undefined\n                });\n                this.overlay(true);\n            } else {\n                this.setState({\n                    city: undefined, country: undefined, temp: undefined, weather: undefined, windSpeed: undefined,\n                    windDeg: undefined, windDir: undefined, windLabel: undefined, humidity: undefined,\n                    pressure: undefined, sunrise: undefined, sunset: undefined, coords: { lat: undefined, lon: undefined },\n                    error: 'Hmmm.. i cant find this city', weatherOn: false\n                });\n                this.overlay(false);\n            }\n        } else {\n            this.setState({\n                city: undefined, country: undefined, temp: undefined, weather: undefined, windSpeed: undefined,\n                windDeg: undefined, windDir: undefined, windLabel: undefined, humidity: undefined, pressure: undefined,\n                sunrise: undefined, sunset: undefined, coords: { lat: undefined, lon: undefined },\n                error: 'Enter the name of the city', weatherOn: false\n            });\n        }\n    };\n\n    render () {\n        return (\n            <div className=\"app-wrapper\">\n                <div className={'app-wrapper__inner ' + this.state.seasonBg[1]}>\n                    <Weather\n                        city={this.state.city} country={this.state.country} temp={this.state.temp}\n                        weather={this.state.weather} windSpeed={this.state.windSpeed} windDeg={this.state.windDeg}\n                        windDir={this.state.windDir} windLabel={this.state.windLabel} humidity={this.state.humidity}\n                        pressure={this.state.pressure} sunrise={this.state.sunrise} sunset={this.state.sunset}\n                        coords={this.state.coords} error={this.state.error} getWeather={this.getWeather}\n                        seasonBg={this.state.seasonBg} resetWeather={this.resetWeather} weatherOn={this.state.weatherOn}\n                    />\n                </div>\n            </div>\n        );\n    };\n};","import React from 'react';\n\nconst Info = () => (\n    <div className=\"info-wrap\">\n        <h2>Weather app</h2>\n        <p>The simple way for quick weather!</p>\n    </div>\n);\n\nexport default Info;\n","import React from 'react';\n\nconst Form = props => (\n    <form onSubmit={ props.getWeather } className=\"app-form\">\n        <div className=\"app-form__wrapper\">\n        \t<input type=\"text\" name=\"city\" placeholder=\"City\" id=\"form_city_input\" />\n       \t\t<button className=\"btn-floating btn-large pulse blue lighten-5\">\n                <i className=\"material-icons\" style={{'color': props.seasonBg[2]}}>cloud</i>\n            </button>\n        </div>\n    </form>\n);\n\nexport default Form;\n","import React from 'react';\nimport Info from './info';\nimport Form from './form';\nimport {Animated} from \"react-animated-css\";\n\nconst Weather = props => (\n    <div className=\"weather-wrap\">\n        <div id=\"weather_wrap_image\" className=\"weather-wrap__image\" style={{ 'background': 'url(images/' + props.seasonBg[0] + ') no-repeat center bottom / cover' }}>\n            <div className=\"weather-wrap__image-reset\" onClick={props.resetWeather} id=\"weather_wrap_image_reset\">\n                <svg viewBox=\"0 0 32 32\">\n                    <path d=\"M32 1.829l-1.828-1.829-14.172 14.171-14.171-14.171-1.829 1.829 14.171 14.171-14.171 14.172 1.829 1.828 14.171-14.171 14.172 14.171 1.828-1.828-14.171-14.172z\"></path>\n                </svg>\n            </div>\n            <div className=\"weather-wrap__image-inner\">\n                <div className=\"weather-wrap__image-inner-items\" id=\"weather_image_items\">\n                    <div>\n                        {\n                            props.city && props.country &&\n                            <p className=\"weather-wrap__country\">{props.city}, {props.country}</p>\n                        }\n                        {\n                            props.temp &&\n                            <p className=\"weather-wrap__temps\">{(props.temp).toFixed(2)} &deg;C, {((props.temp * (9 / 5)) + 32).toFixed(2)} &deg;F</p>\n                        }\n                        {\n                            props.weather &&\n                            <p className=\"weather-wrap__weather\">{props.weather}</p>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div className=\"weather-wrap__content\">\n            <div className=\"weather-wrap__content-inner\">\n                <Info />\n                <Form\n                    getWeather={props.getWeather}\n                    seasonBg={props.seasonBg}\n                />\n                { props.city &&\n                    <Animated animationIn=\"fadeInUp\" animationOut=\"fadeOutDown\" isVisible={props.weatherOn}>\n                        <div className=\"weather-wrap__content-inner-items\">\n                            <p className=\"weather-wrap__content-item\">\n                                <span>Wind</span>: {props.windLabel ? props.windLabel : '-'},\n                                {props.windSpeed && ' ' + props.windSpeed + 'm/s,'}\n                                {props.windSpeed && ' ' + (props.windSpeed * 1.6).toFixed(2) + 'km/h,'}\n                                {props.windDir && ' ' + props.windDir} {props.windDeg && ' (' + props.windDeg.toFixed(2) + ')'}\n                            </p>                           \n                            {\n                                props.humidity &&\n                                <p className=\"weather-wrap__content-item\">\n                                    <span>Humidity</span>: {props.humidity}%\n                                </p>\n                            }\n                            {\n                                props.pressure &&\n                                <p className=\"weather-wrap__content-item\">\n                                    <span>Pressure</span>: {props.pressure} hpa\n                                </p>\n                            }\n                            {\n                                props.sunrise &&\n                                <p className=\"weather-wrap__content-item\">\n                                    <span>Sunrise</span>: {props.sunrise}\n                                </p>\n                            }\n                            {\n                                props.sunset &&\n                                <p className=\"weather-wrap__content-item\">\n                                    <span>Sunset</span>: {props.sunset}\n                                </p>\n                            }\n                            {\n                                props.coords &&\n                                <p className=\"weather-wrap__content-item\">\n                                    <span>Geo coords</span>: [{props.coords.lat}, {props.coords.lon}]\n                                </p>\n                            }\n                        </div>\n                    </Animated>\n                }\n                {\n                    props.error && <p className=\"error red\">{props.error}</p>\n                }\n            </div>\n        </div>\n    </div>\n);\n\nexport default Weather;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './libs/normalize/normalize.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}